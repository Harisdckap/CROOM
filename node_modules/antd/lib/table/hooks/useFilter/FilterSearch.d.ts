import * as React from 'react';
<<<<<<< HEAD
import type { FilterSearchType, TableLocale } from '../../interface';
interface FilterSearchProps<RecordType = any> {
=======
import type { AnyObject } from '../../../_util/type';
import type { FilterSearchType, TableLocale } from '../../interface';
interface FilterSearchProps<RecordType = AnyObject> {
>>>>>>> bcc87c1c18f9bd3a2f944eca20e5123d13d72859
    value: string;
    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
    filterSearch: FilterSearchType<RecordType>;
    tablePrefixCls: string;
    locale: TableLocale;
}
<<<<<<< HEAD
declare function FilterSearch<RecordType>({ value, onChange, filterSearch, tablePrefixCls, locale, }: FilterSearchProps<RecordType>): React.JSX.Element | null;
=======
declare const FilterSearch: <RecordType extends AnyObject = AnyObject>(props: FilterSearchProps<RecordType>) => React.JSX.Element | null;
>>>>>>> bcc87c1c18f9bd3a2f944eca20e5123d13d72859
export default FilterSearch;
